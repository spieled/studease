<?xml version="1.0" encoding="UTF-8"?>

<!-- ///////////////////////////////////////// -->
<!-- // Spring主要配置文件 -->
<!-- // 项目普通开发人员禁止修改此文件 -->
<!-- ///////////////////////////////////////// -->

<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:task="http://www.springframework.org/schema/task"
        xmlns="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		">


    <!-- 解决 @ResponseBody 汉字返回乱码 默认属性是("ISO-8859-1") 这里改为utf-8 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <!--注解支持-->
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.cloudvast"/>

    <!-- 实现异步调用 -->
    <task:executor id="taskExecutor" pool-size="50"/>
    <task:scheduler id="taskScheduler" pool-size="1000"/>
    <task:annotation-driven executor="taskExecutor" scheduler="taskScheduler"/>

    <!--GUZZ声明 -->
    <bean id="guzzContext" class="org.guzz.web.context.spring.GuzzContextBeanFactory"
          factory-method="createGuzzContext">
        <constructor-arg>
            <value>classpath:guzz.xml</value>
        </constructor-arg>
    </bean>
    <bean id="abstractGuzzDao" class="org.guzz.dao.GuzzBaseDao">
        <property name="guzzContext" ref="guzzContext"/>
    </bean>


    <!--GUZZ数据库事务管理器 -->
    <bean id="transactionManager" class="org.guzz.web.context.spring.GuzzTransactionManager">
        <property name="guzzContext" ref="guzzContext"/>
    </bean>
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>


    <!-- 实现对CacheService的直接调用，手动操作Memcached缓存 -->
    <bean id="cacheService" class="com.cloudvast.cache.CacheService">
        <property name="memcached">
            <bean class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean"
                  destroy-method="shutdown">
                <property name="servers">
                    <value>127.0.0.1:11211</value>
                </property>
            </bean>
        </property>
    </bean>


    <!--启用AOP支持 否则即将声明的@Cache和@Evict注解不起作用 -->
    <aop:aspectj-autoproxy/>


    <!--实现@Cache和@Evict两个注解，自动操作Memcached缓存 -->
    <bean class="com.cloudvast.cache.aop.Cache">
        <property name="cacheService" ref="cacheService"/>
    </bean>
    <bean class="com.cloudvast.cache.aop.Evict">
        <property name="cacheService" ref="cacheService"/>
    </bean>


    <!-- Guzz 的 Ddl 自动建表 -->
    <bean class="com.cloudvast.guzz.Ddl">
        <property name="enabled" value="true"/>
        <property name="packagesToScan">
            <list>
                <value>com.cloudvast.studease.entity</value>
            </list>
        </property>
    </bean>


    <!-- 扫描所有@URL和@RequestMapping声明的URL映射信息，生成JS文件和持久化到数据库 -->
    <bean class="com.cloudvast.url.UrlScanner"/>


    <!-- 扫描所有实现了BaseEnum的枚举类型 -->
    <bean class="com.cloudvast.util.enums.EnumScanner">
        <property name="packagesToScan">
            <list>
                <value>com.cloudvast.util.enums</value>
            </list>
        </property>
    </bean>


</beans>
